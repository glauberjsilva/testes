<?xml version="1.0" encoding="UTF-8"?><testrun name="teste-junit5" project="teste-junit5" tests="7" started="7" failures="1" errors="0" ignored="0">
  <testsuite name="com.glauber.junit5.service.CalculatorTest" time="0.095" displayname="Calculadora Test JUnit5" uniqueid="[engine:junit-jupiter]/[class:com.glauber.junit5.service.CalculatorTest]">
    <testcase name="addsTwoNumbers" classname="com.glauber.junit5.service.CalculatorTest" time="0.007" displayname="Soma: 1 + 1 = 2" uniqueid="[engine:junit-jupiter]/[class:com.glauber.junit5.service.CalculatorTest]/[method:addsTwoNumbers()]"/>
    <testcase name="deveLancarExcecaoAoDividirPorZero" classname="com.glauber.junit5.service.CalculatorTest" time="0.048" displayname="deveLancarExcecaoAoDividirPorZero()" uniqueid="[engine:junit-jupiter]/[class:com.glauber.junit5.service.CalculatorTest]/[method:deveLancarExcecaoAoDividirPorZero()]"/>
    <testsuite name="add(com.glauber.junit5.service.CalculatorTest)" time="0.026" displayname="add(int, int, int)" parameters="int,int,int" uniqueid="[engine:junit-jupiter]/[class:com.glauber.junit5.service.CalculatorTest]/[test-template:add(int, int, int)]">
      <testcase name="add" classname="com.glauber.junit5.service.CalculatorTest" time="0.026" dynamicTest="true" displayname="0 + 1 = 1" parameters="int,int,int" uniqueid="[engine:junit-jupiter]/[class:com.glauber.junit5.service.CalculatorTest]/[test-template:add(int, int, int)]/[test-template-invocation:#1]"/>
      <testcase name="add" classname="com.glauber.junit5.service.CalculatorTest" time="0.003" dynamicTest="true" displayname="1 + 2 = 3" parameters="int,int,int" uniqueid="[engine:junit-jupiter]/[class:com.glauber.junit5.service.CalculatorTest]/[test-template:add(int, int, int)]/[test-template-invocation:#2]"/>
      <testcase name="add" classname="com.glauber.junit5.service.CalculatorTest" time="0.002" dynamicTest="true" displayname="49 + 51 = 100" parameters="int,int,int" uniqueid="[engine:junit-jupiter]/[class:com.glauber.junit5.service.CalculatorTest]/[test-template:add(int, int, int)]/[test-template-invocation:#3]"/>
      <testcase name="add" classname="com.glauber.junit5.service.CalculatorTest" time="0.001" dynamicTest="true" displayname="1 + 100 = 101" parameters="int,int,int" uniqueid="[engine:junit-jupiter]/[class:com.glauber.junit5.service.CalculatorTest]/[test-template:add(int, int, int)]/[test-template-invocation:#4]"/>
    </testsuite>
    <testcase name="deveLancarExcecaoAoDividirPorZero2" classname="com.glauber.junit5.service.CalculatorTest" time="0.006" displayname="deveLancarExcecaoAoDividirPorZero2()" uniqueid="[engine:junit-jupiter]/[class:com.glauber.junit5.service.CalculatorTest]/[method:deveLancarExcecaoAoDividirPorZero2()]">
      <failure>org.opentest4j.AssertionFailedError: Deve lan√ßar uma CalculatorException ==&gt; Expected com.glauber.junit5.exceptions.CalculatorException to be thrown, but nothing was thrown.&#13;
	at org.junit.jupiter.api.AssertThrows.assertThrows(AssertThrows.java:70)&#13;
	at org.junit.jupiter.api.AssertThrows.assertThrows(AssertThrows.java:47)&#13;
	at org.junit.jupiter.api.Assertions.assertThrows(Assertions.java:1201)&#13;
	at com.glauber.junit5.service.CalculatorTest.deveLancarExcecaoAoDividirPorZero2(CalculatorTest.java:60)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:498)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:513)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:170)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:166)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:113)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:58)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:113)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:121)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175)&#13;
	at java.util.Iterator.forEachRemaining(Iterator.java:116)&#13;
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)&#13;
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)&#13;
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:121)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:121)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175)&#13;
	at java.util.Iterator.forEachRemaining(Iterator.java:116)&#13;
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)&#13;
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)&#13;
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:121)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:55)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:538)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:760)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:460)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:206)&#13;
&#13;
</failure>
    </testcase>
  </testsuite>
</testrun>
